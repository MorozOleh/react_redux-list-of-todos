{"version":3,"sources":["store/reducers/userReducer.jsx","store/reducers/todosReducer.jsx","store/reducers/rootReducer.jsx","store/types.jsx","store/index.js","API/api.js","components/Todo/Todo.jsx","store/actions.jsx","store/selectors.jsx","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.jsx"],"names":["initialState","selectedUser","user","initiateState","sortedBy","todos","cachedTodos","rootReducer","combineReducers","userReducer","state","action","type","payload","todosReducer","filter","todo","title","includes","completed","store","createStore","composeWithDevTools","applyMiddleware","thunk","request","url","a","fetch","response","ok","Error","status","json","getTodos","data","getUser","userId","Todo","dispatch","useDispatch","className","classNames","readOnly","checked","onClick","getUserId","getUserProfile","sortByCategory","fetchedTodos","TodoList","sortedByType","useSelector","useEffect","selectCategory","value","placeholder","onChange","event","target","map","key","id","CurrentUser","name","email","phone","App","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9556bcc3.chunk.js","sourcesContent":["import { SELECT_USER, CLEAR_USER_ID, USER_PROFILE } from '../types';\n\nconst initialState = {\n  selectedUser: 0,\n  user: null,\n};\n\nexport const userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SELECT_USER:\n      return {\n        ...state,\n        selectedUser: action.payload,\n      };\n\n    case CLEAR_USER_ID:\n      return {\n        ...state,\n        selectedUser: 0,\n        user: null,\n      };\n\n    case USER_PROFILE:\n      return {\n        ...state,\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import {\n  SORT_BY_TYPE,\n  GET_TODOS,\n  SORT_BY_QUERY,\n  SORT_BY_ACTIVE,\n  SORT_BY_ALL,\n  SORT_BY_COMPLETED,\n} from '../types';\n\nconst initiateState = {\n  sortedBy: '',\n  todos: [],\n  cachedTodos: [],\n};\n\nexport const todosReducer = (state = initiateState, action) => {\n  switch (action.type) {\n    case SORT_BY_TYPE:\n      return {\n        ...state,\n        sortedBy: action.payload,\n      };\n\n    case GET_TODOS:\n      return {\n        ...state,\n        todos: action.payload,\n        cachedTodos: action.payload,\n      };\n\n    case SORT_BY_QUERY:\n      return {\n        ...state,\n        cachedTodos: state.todos.filter(todo => ((todo.title !== null)\n          ? todo.title.includes(action.payload)\n          : null)),\n      };\n\n    case SORT_BY_ACTIVE:\n      return {\n        ...state,\n        cachedTodos: state.todos.filter(\n          todo => todo.completed,\n        ),\n      };\n\n    case SORT_BY_COMPLETED:\n      return {\n        ...state,\n        cachedTodos: state.todos.filter(\n          todo => !todo.completed,\n        ),\n      };\n\n    case SORT_BY_ALL:\n      return {\n        ...state,\n        cachedTodos: state.todos,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { userReducer } from './userReducer';\nimport { todosReducer } from './todosReducer';\n\nexport const rootReducer = combineReducers({\n  userReducer,\n  todosReducer,\n});\n","export const SELECT_USER = 'user/SELECT_USER';\nexport const CLEAR_USER_ID = 'user/CLEAR_USER_ID';\nexport const USER_PROFILE = 'user/USER_PROFILE';\n\nexport const SORT_BY_TYPE = 'todos/SORT_BY_TYPE';\nexport const GET_TODOS = 'todos/GET_TODOS';\nexport const SORT_BY_QUERY = 'todos/SORT_BY_QUERY';\nexport const SORT_BY_COMPLETED = 'todos/SORT_BY_COMPLETED';\nexport const SORT_BY_ALL = 'todos/SORT_BY_ALL';\nexport const SORT_BY_ACTIVE = 'todos/SORT_BY_ACTIVE';\n","\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducers/rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","const BASE__URL = 'https://mate-api.herokuapp.com/';\n\nconst request = async(url) => {\n  const response = await fetch(`${BASE__URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status}`);\n  }\n\n  return response.json();\n};\n\nexport const getTodos = async() => {\n  const response = await request('todos');\n\n  return response.data;\n};\n\nexport const getUser = async(userId) => {\n  const response = await request(`users/${userId}`);\n\n  return response.data;\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { selectUser } from '../../store/actions';\n\nexport function Todo({ todo }) {\n\n  const dispatch = useDispatch();\n  return (\n    <li className={classNames(\n      'TodoList__item',\n      { 'TodoList__item--unchecked': todo.completed },\n      { 'TodoList__item--checked': !todo.completed },\n    )}\n    >\n      <label>\n        <input\n          type=\"checkbox\"\n          readOnly\n          checked={!todo.completed}\n        />\n        <p>{todo.title}</p>\n      </label>\n\n      <button\n        className=\"\n          TodoList__user-button\n          TodoList__user-button--selected\n          button\n        \"\n        type=\"button\"\n        onClick={() => dispatch(selectUser(todo.userId))}\n      >\n        User&nbsp;#\n        {todo.userId}\n      </button>\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool,\n    createdAt: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    updatedAt: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    userId: PropTypes.number,\n  }).isRequired,\n};\n","import { getTodos, getUser } from '../API/api';\nimport {\n  SELECT_USER,\n  CLEAR_USER_ID,\n  SORT_BY_TYPE,\n  GET_TODOS,\n  SORT_BY_QUERY,\n  SORT_BY_ACTIVE,\n  SORT_BY_ALL,\n  SORT_BY_COMPLETED,\n  USER_PROFILE,\n} from './types';\n\nexport const selectUser = id => ({\n  type: SELECT_USER,\n  payload: id,\n});\n\nexport const getUserProfileById = id => async(dispatch) => {\n  const response = await getUser(id);\n\n  dispatch({\n    type: USER_PROFILE,\n    payload: response,\n  });\n};\n\nexport const clearUserId = () => ({\n  type: CLEAR_USER_ID,\n});\n\nexport const sortByType = option => ({\n  type: SORT_BY_TYPE,\n  payload: option,\n});\n\nexport const fetchTodos = () => async(dispatch) => {\n  const response = await getTodos();\n\n  return dispatch({\n    type: GET_TODOS,\n    payload: response,\n  });\n};\n\nexport const sortByQuery = query => ({\n  type: SORT_BY_QUERY,\n  payload: query,\n});\n\nexport const sortByAll = () => ({\n  type: SORT_BY_ALL,\n});\n\nexport const sortByCompleted = () => ({\n  type: SORT_BY_COMPLETED,\n});\n\nexport const sortByActive = () => ({\n  type: SORT_BY_ACTIVE,\n});\n","\nexport const getUserId = state => state.userReducer.selectedUser;\nexport const getUserProfile = state => state.userReducer.user;\nexport const sortByCategory = state => state.todosReducer.sortedBy;\nexport const fetchedTodos = state => state.todosReducer.cachedTodos;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Todo } from '../Todo';\nimport {\n  fetchTodos,\n  sortByType,\n  sortByQuery,\n  sortByActive,\n  sortByCompleted,\n} from '../../store/actions';\n\nimport './TodoList.scss';\nimport { sortByCategory, fetchedTodos } from '../../store/selectors';\n\nfunction TodoList() {\n  const sortedByType = useSelector(sortByCategory);\n  const todos = useSelector(fetchedTodos);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, []);\n\n  const filterByTitle = (event) => {\n    const { value } = event.target;\n\n    dispatch(sortByQuery(value));\n  };\n\n  const onChange = (event) => {\n    dispatch(sortByType(event.target.value));\n    selectCategory(event.target.value);\n  };\n\n  const selectCategory = (value) => {\n    switch (value) {\n      case 'completed':\n        dispatch(sortByCompleted());\n        break;\n\n      case 'active':\n        dispatch(sortByActive());\n        break;\n\n      default:\n        dispatch(sortByActive());\n    }\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n      <>\n        <input\n          className=\"input is-rounded\"\n          type=\"text\"\n          placeholder=\"type title here\"\n          onChange={filterByTitle}\n        />\n        <div className=\"select is-rounded\">\n          <select\n            value={sortedByType}\n            onChange={onChange}\n          >\n            <option>all</option>\n            <option>active</option>\n            <option>completed</option>\n          </select>\n        </div>\n      </>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {todos.map(todo => (\n            <Todo\n              key={todo.id}\n              todo={todo}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React, { useEffect } from 'react';\nimport './CurrentUser.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getUserId, getUserProfile } from '../../store/selectors';\nimport { clearUserId, getUserProfileById } from '../../store/actions';\n\nfunction CurrentUser() {\n  const dispatch = useDispatch();\n  const userId = useSelector(getUserId);\n  const user = useSelector(getUserProfile);\n\n  useEffect(() => {\n    dispatch(getUserProfileById(userId));\n  }, [userId]);\n\n  if (!user) {\n    return (<span> Wait please </span>);\n  }\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          {`Selected user: ${userId}`}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{user.name}</h3>\n      <p className=\"CurrentUser__email\">{user.email}</p>\n      <p className=\"CurrentUser__phone\">{user.phone}</p>\n      <button\n        type=\"button\"\n        className=\"button is-dark\"\n        onClick={() => dispatch(clearUserId())}\n      >\n        Clear\n      </button>\n    </div>\n  );\n}\n\nexport default CurrentUser;\n","\nimport React from 'react';\nimport './styles/general.scss';\nimport 'bulma';\nimport TodoList from './components/TodoList';\nimport CurrentUser from './components/CurrentUser';\nimport './App.scss';\nimport { getUserId } from './store/selectors';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n  const userId = useSelector(getUserId);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {\n            userId\n              ? <CurrentUser />\n              : 'No user selected'\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport store from './store';\nimport App from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}